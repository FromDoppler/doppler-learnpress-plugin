/**
* Admin styles for Doppler for LearnPress
*/
@import url(fonts.css);
/**
* Variables
*/
/**
* Menu
*/
#toplevel_page_dplr_learnpress_menu a .dashicons-before img {
  width: 20px; }

/**
* Settings
*/
.doppler-learnpress-settings {
  font-family: "Proxima Nova Rg", arial;
  font-size: 15px; }
  .doppler-learnpress-settings h2.main-title {
    margin-bottom: 15px; }
  .doppler-learnpress-settings .small-text {
    font-size: 13px; }
  .doppler-learnpress-settings .d-none {
    display: none; }
  .doppler-learnpress-settings hr {
    margin-top: 15px;
    margin-bottom: 15px; }
  .doppler-learnpress-settings a {
    color: #33AC72; }
    .doppler-learnpress-settings a:hover {
      color: #027B44; }
    .doppler-learnpress-settings a.text-dark-red {
      color: darkred; }
    .doppler-learnpress-settings a.nav-tab {
      color: #555; }
  .doppler-learnpress-settings .mt-30 {
    margin-top: 30px; }
  .doppler-learnpress-settings .text-right {
    text-align: right; }
  .doppler-learnpress-settings .text-red, .doppler-learnpress-settings span.error, .doppler-learnpress-settings span.ev-error {
    color: #b80d0d; }
  .doppler-learnpress-settings .text-dark-green {
    color: #027B44; }
  .doppler-learnpress-settings .pointer {
    cursor: pointer; }
  .doppler-learnpress-settings .dplr-tab-content {
    max-width: 940px;
    margin: auto; }
  .doppler-learnpress-settings .dplr-button {
    cursor: pointer;
    margin-top: 15px;
    background-color: #33AD73;
    line-height: 40px;
    padding-left: 30px;
    padding-right: 30px;
    border: 0px;
    box-shadow: none;
    text-shadow: none;
    color: #fff;
    border-radius: 3px;
    transition: background-color .5s; }
    .doppler-learnpress-settings .dplr-button:hover {
      background-color: #027B44; }
    .doppler-learnpress-settings .dplr-button.dplr-button--rounded {
      border-radius: 100px; }
    .doppler-learnpress-settings .dplr-button.dplr-button--alt {
      background: #666; }
    .doppler-learnpress-settings .dplr-button.loading > div.loading {
      z-index: 999;
      overflow: show;
      margin: auto;
      top: 20px;
      left: 0;
      bottom: 0;
      right: 0;
      display: table;
      position: relative; }
      .doppler-learnpress-settings .dplr-button.loading > div.loading:not(:required):after {
        content: '';
        display: block;
        font-size: 4px;
        width: 1em;
        height: 1em;
        margin-top: -0.5em;
        -webkit-animation: spinner 1500ms infinite linear;
        animation: spinner 1500ms infinite linear;
        border-radius: 0.5em;
        box-shadow: rgba(255, 255, 255, 0.75) 1.5em 0 0 0, rgba(255, 255, 255, 0.75) 1.1em 1.1em 0 0, rgba(255, 255, 255, 0.75) 0 1.5em 0 0, rgba(255, 255, 255, 0.75) -1.1em 1.1em 0 0, rgba(255, 255, 255, 0.75) -1.5em 0 0 0, rgba(255, 255, 255, 0.75) -1.1em -1.1em 0 0, rgba(255, 255, 255, 0.75) 0 -1.5em 0 0, rgba(255, 255, 255, 0.75) 1.1em -1.1em 0 0; }
    .doppler-learnpress-settings .dplr-button.loading > span {
      opacity: 0.3; }
  .doppler-learnpress-settings h2.nav-tab-wrapper {
    margin-bottom: 30px; }
  .doppler-learnpress-settings .dplr-loading {
    max-width: 500px;
    min-height: 200px;
    background-image: url("../img/loading.gif");
    background-repeat: no-repeat;
    background-position: 50% 50%; }
  .doppler-learnpress-settings .doing-synch {
    display: none; }
  .doppler-learnpress-settings .connected-status p {
    font-size: 15px; }
  .doppler-learnpress-settings table.grid {
    border-spacing: 0;
    background: none repeat scroll 0 0 #fff;
    width: 100%; }
    .doppler-learnpress-settings table.grid thead {
      margin-bottom: 10px; }
      .doppler-learnpress-settings table.grid thead tr th {
        background: #cac7be;
        color: #fff;
        font-size: 13px;
        height: 40px;
        text-align: left;
        padding-left: 10px;
        vertical-align: middle; }
    .doppler-learnpress-settings table.grid tr th, .doppler-learnpress-settings table.grid tr td {
      border-bottom: 1px solid #e8e8e8;
      color: #666;
      font-size: 13px;
      height: 39px;
      line-height: 21px;
      padding: 0 15px 0 15px;
      vertical-align: middle;
      white-space: nowrap;
      text-align: left; }
      .doppler-learnpress-settings table.grid tr th select, .doppler-learnpress-settings table.grid tr td select {
        width: 100%; }
      .doppler-learnpress-settings table.grid tr th.text-right, .doppler-learnpress-settings table.grid tr td.text-right {
        text-align: right; }
    .doppler-learnpress-settings table.grid tbody tr:hover {
      background-color: #ffc; }
    .doppler-learnpress-settings table.grid.tbl--mapping {
      margin-top: 30px; }
      .doppler-learnpress-settings table.grid.tbl--mapping:first-child {
        margin-top: 0px; }
      .doppler-learnpress-settings table.grid.tbl--mapping tbody tr:first-child td {
        padding-top: 10px; }
  .doppler-learnpress-settings #dplr-form-connect,
  .doppler-learnpress-settings #dplr-form-disconnect {
    width: 500px;
    margin: auto; }
    .doppler-learnpress-settings #dplr-form-connect table th,
    .doppler-learnpress-settings #dplr-form-disconnect table th {
      width: 20%; }
    .doppler-learnpress-settings #dplr-form-connect input[type="email"],
    .doppler-learnpress-settings #dplr-form-connect input[type="text"],
    .doppler-learnpress-settings #dplr-form-disconnect input[type="email"],
    .doppler-learnpress-settings #dplr-form-disconnect input[type="text"] {
      width: 100%; }
  .doppler-learnpress-settings #dplr-crud #dplr-form-list-crud label {
    display: block;
    font-weight: 700; }
  .doppler-learnpress-settings #dplr-crud #dplr-form-list-crud .tbl {
    margin-top: 30px; }
  .doppler-learnpress-settings #dplr-crud .dplr-loading {
    display: none; }
  .doppler-learnpress-settings #dplr-crud #dplr-tbl-lists a {
    cursor: pointer; }
  .doppler-learnpress-settings #dplr-crud #dplr-tbl-lists tr.deleting {
    pointer-events: none;
    opacity: 0.6; }
    .doppler-learnpress-settings #dplr-crud #dplr-tbl-lists tr.deleting a {
      visibility: hidden; }
      .doppler-learnpress-settings #dplr-crud #dplr-tbl-lists tr.deleting a:after {
        background-image: url("../img/loading.gif");
        background-repeat: no-repeat;
        content: '';
        height: 18px;
        margin-top: -18px;
        visibility: visible;
        display: block; }
  .doppler-learnpress-settings #dplr-crud.loading form button, .doppler-learnpress-settings #dplr-crud.loading form input {
    pointer-events: none; }
  .doppler-learnpress-settings #dplr-crud.loading .dplr-loading {
    display: block; }
  .doppler-learnpress-settings #dplr-crud.loading #dplr-tbl-lists {
    display: none; }
  .doppler-learnpress-settings form input[type="text"], .doppler-learnpress-settings form input[type="url"], .doppler-learnpress-settings form input[type="email"], .doppler-learnpress-settings form textarea, .doppler-learnpress-settings form select {
    box-sizing: border-box;
    background-color: #fff;
    border: 1px solid #d3d3d3;
    border-radius: 3px;
    box-sizing: border-box;
    color: #94917f;
    font-family: inherit;
    font-size: 15px;
    height: 42px;
    padding: 10px;
    position: relative;
    box-shadow: none; }
  .doppler-learnpress-settings #students-frame {
    max-height: 80px;
    overflow: scroll;
    background: #ffc;
    padding: 10px;
    display: none; }
  .doppler-learnpress-settings #view-students-list {
    font-weight: 400;
    cursor: pointer; }
  .doppler-learnpress-settings .synch-ok {
    display: none; }
    .doppler-learnpress-settings .synch-ok.dashicons {
      top: 6px;
      position: relative; }

/**
Animations
*/
/* Animation */
@-webkit-keyframes spinner {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

@keyframes spinner {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

/****spinners****/
@-webkit-keyframes load8 {
  0% { }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

@keyframes load8 {
  0% { }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

/**
* Media Queries
*/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
